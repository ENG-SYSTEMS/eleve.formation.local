["function _9da4dd5169ba6fa183ed4d43f848ee50559d6991(){};",79088,36,91,1048485,1048576,62647,"{@link Ext.ActionSheet ActionSheets} are used to display a list of {@link Ext.Button buttons} in a popup dialog.\n *\n * The key difference between ActionSheet and {@link Ext.Sheet} is that ActionSheets are docked at the bottom of the\n * screen, and the {@link #defaultType} is set to {@link Ext.Button button}.",2134752,37,"preview miniphone\n *     var actionSheet = Ext.create('Ext.ActionSheet', {",1267536,57,"text: 'Delete draft',\n *                 ui  : 'decline",1486176,35,"{\n *                 text: 'Save draf",1967135,36,"{\n * ",1289386,33,"*                 ui  : 'confirm",1210798,49,"    Ext.Viewport.add(actionSheet);\n *     actionSheet.show();\n *\n * As you can see from the code above, you no longer have to specify a `xtype` when creating buttons within a {@link Ext.ActionSheet ActionSheet},\n * because the {@link #defaultType} is set to {@link Ext.Button button}.\n *\n */\nExt.define('Ext.ActionSheet",1285305,32,"alias: 'widget.actionsheet'",823440,43,850032,44,1107076,35,"-acti",1312653,32,850032,44,1025165,49,"inheritdoc",1025218,71,1285470,32,"ottom: 0,\n        // @hide\n        cent",1866320,40,1108416,45,"eight",958368,37,850032,44,"defaultType: 'button'",2148288,115,"op: 0,\n            bottom: null\n        }\n    ]",1111210,923765,"**\n * The DelayedTask class provides a convenient way to \"buffer\" the execution of a method,\n * performing `setTimeout` where a new timeout cancels the old timeout. When called, the\n * task will wait the specified time period before executing. If during that time period,\n * the task is called again, the original call will be canceled. This continues so that\n * the function is only called a single time for each iteration.\n *\n * This method is especially useful for things like detecting whether a user has finished\n * typing in a text field. An example would be performing validation on a keypress. You can\n * use this class to buffer the keypress events for a certain number of milliseconds, and\n * perform only if they stop for that amount of time.\n *\n * Using {@link Ext.util.DelayedTask} is very simple:\n *\n *     //create the delayed task instance with our callback\n *     var task = Ext.create('Ext.util.DelayedTask', {\n *          fn",1779277,43,"callback!'",204624,38,"task.delay(1500); //the callback function will now be called after 1500ms\n *\n *     task.cancel(); //the callback function will never be called now, unless we call delay() again",2134752,36,"\n *     //create a textfield where we can listen to text\n *     var field =",1268736,43,"xtype: 'textfield',\n *         label: 'Length: 0'\n *     });\n *\n *     //add the textfield into a fieldset",1311008,46,"formpanel'",1981677,46,"fieldset',\n *             items: [field],\n *             instructions: 'Type into the field and watch the count go up after 500ms",1981835,34,"    //create our delayed task with a function that returns the fields length as the fields label\n *     var task = Ext.create('Ext.util.DelayedTask', function() {\n *         field.setLabel('Length: ' + field.getValue().length);\n *     });\n *\n *     // Wait 500ms before calling our function. If the user presses another key\n *     // during that 500ms, it will be canceled and we'll wait another 500ms.\n *     field.on('keyup', function() {\n *         task.delay(500);\n *     });\n *\n * @constructor\n * The parameters to this constructor serve as defaults and are not required.\n * @param {Function} fn The default function to call.\n * @param {Object} scope The default scope (The ",1450608,43,"called. If\n * not specified, `this` will refer to the browser window.\n * @param {Array} args The default Array of argu",1023338,32,"DelayedTask', {\n    config: {\n        interval: null,\n        delay: null,\n        fn",1676378,37,"args",2104447,40,"fn, scope, args) {\n",1295567,39,544846,36,",\n",762734,39,"};",703968,45,"/**\n     * Cancels any pending timeout and queues a new one",113602,35,"milliseconds to delay",112328,32,"Overrides the original function passed when instanti",1031623,32,"Scope Overrides the original `scope` passed when instantiated. Remember that if no scope\n     * is specified, `this` will refer",115695,46,"newArgs Overrides the original `args` passed when instantiated.\n     */\n    delay: function(delay, newFn, newScope, newArg",1292560,38,"cancel any existing queued functions\n        me.cancel();\n        //set all the new configurations",1104637,48,"me.setDelay(delay",1631123,40,"newFn)) {\n            me.setFn(newFn);\n        }\n        if (newScope) {\n            me.setScope(newScope);\n        }\n        if (newScope) {\n            me.setArgs(newArgs);\n        }\n        //create the callback method for this delayed task\n        var call",2388032,32,"me.getFn().apply(me.getScope(), me.getArgs() || []);\n                me.cancel();\n            };\n        me.setInterval(setInterval(call, me.getDelay()));\n    },\n    /**\n     * Cancel the last queued timeout\n     */\n    cancel: function() {\n        this.setInterval(",1816412,45,"Clears the old interval\n     */\n    updateInterval: function(newInterval, oldInterval) {\n        if (oldInterval) {\n            clearInterval(oldInterval",964656,50," Changes the value into an array if it isn't one.\n     */\n    applyArgs",1104064,33,"!Ext.isArray",1527984,33,"[\n",2408054,35,"]",1869977,40,2034968,55513,2090481,330676,"checkEtapeUrl",2421581,38,"checkEtape",2421141,181,"currentQuestion: -1",2421312,688,"CurrentQuestion: function(o) {\n        console.log('current question', o);\n        if (o > 0) {\n",376084,34,"currentquestion', o);\n        } else if (o == -1) {\n            var p = localStorage.getItem('currentquestion');\n            console.log('storage question', p);\n            if (parseInt(p) > parseInt(o)) {",1402606,32,"Question(p);\n            } else  {",1402606,32,"Question(1)",805710,37,"}",2421982,301,"console.log('sessionid', o);\n        if (o != undefined)  {\n    ",2422365,37,"id', o",2432439,33,2422332,41,"console.log('sessionname', o);\n        if (o != undefined)  {\n    ",2422365,52,"    }\n        ",2422412,46,"console.log('localstorage', localStorage.getItem('equipe'), ",2422583,35,", ",2422647,46,2422460,420,"XXX",2422880,95,", this.getCurrentQuestion",2422973,1477,"localStorage.removeItem('currentquestion",2424438,3366,2428836,86,2426252,73,2427389,379,2427196,36,2427804,1705,2428836,49,"cat\ufffff\ufffffgorie de position\n     */\n    get",2428925,230,"Position",2466574,33,2429533,2056,",\n            confirm: '[action=confirm]',\n            panneauConfirm: '[action=panneauConfirm",2444236,45,2431632,205,",\n            confirm: {\n                release: 'saveReponse'",310032,34,2431857,159,"wait': 'showWait",2432000,893,"u panneau de confirmation\n        this.getPanneauConfirm().show();\n    },\n    saveRepons",1989696,37,2432601,154,2433352,64,2433424,61,"//fermeture du panneau\n        this.getPanneauConfirm().hide();\n",2433485,48,2444606,32,"Result",2441898,136,"params: results,\n",2444893,64,2433852,61,2423625,39,2433968,38,"}",2323271,35,2444912,45,2434119,40,2424057,107,"}\n        });\n",2433103,56,"var c",2432335,39,2433217,36,"var nq = this.getNextQuestion();\n        if (!nq) {\n            //redirection vers le message de fin\n            me.redirectTo('fin",2436640,42,2433308,36,2434412,100,2434520,73,2434601,51,"}\n        else {\n",2442239,34,"CurrentQuestion(nq.get('Ordre'));\n            me.redirectTo('wai",463647,37,2434852,187,"eleve.utils.Config.getCurrentQuestion()",2435496,73,"console.log('Impossible de trouver la question ' + eleve.utils.Config.getCurrentQuestion());",2435120,99,2435244,227,"parseInt(eleve.utils.Config.getCurrentQuestion())",2435492,57,"\n    },\n    /*",2435550,132,"*/",2432092,46,2435735,205,"//",2435940,92,"//",2436032,1083," && !this._etapeChecking",2437115,59,"checkEtape",2437177,33,"wait",2436640,44,2437257,2303,"6",2439561,264,"this._loading = false",2439811,162,"_etapeChecking: false,\n    showWait: function(",2443531,129,"this._etapeChecking = true;\n        console.log('showWait')",2440056,104,"affichage du texte attente de session",2432639,52,"Loading'];\n        curview.down('[action=loadingText]').setHtml('<h1>Attente de l\\'animateur...</h1><h2>Reprenez votre parcours.</h2>');\n        //r\ufffff\ufffffcup\ufffff\ufffffration de la session\n        this.checkEtape();\n    },\n    checkEtape",2439984,36,"check etape",2440031,35,"var curview = me._indexViews['eleve.view.Loading'];\n        var currentQuestion",2433173,36,"console.log('check etape', currentQuestion",2441769,53,"l'etape est debloqu\ufffff\ufffffe\n",2423118,40,"CheckEtape",2441898,108,"params: {\n                session:",2433441,34,",\n                equipe:",2433368,38,",\n                question: currentQuestion.get('id')\n            }",1131327,42,2423504,52,2433852,61,2423625,39,"this._etapeCheck",2394960,33,"//affichage de la map\n",2445274,58,1140511,33,"obj.reset) {\n                        //reset de la config\n    ",2442231,39,2423796,54,"    //aucune session disponible\n                    var task = Ext.create('Ext.util.DelayedTask",2394911,36,"        me.checkEtape();\n        ",227210,42,"    //The function will start after 0 milliseconds - so we want to start instantly at first\n                    task.delay(5000",306208,34,",\n",2434047,64,2434119,40,2442701,220,2439977,66,2440066,94,"r\ufffff\ufffffcup\ufffff\ufffffration de la session\n        this.getSession();\n    },\n    getSession",1212800,46,"var curview = me._indexViews['eleve.view.Loading']",2441770,418,"affichage du texte de chargement\n                    curview.down('[action=loadingText]').setHtml('<h1>Chargement en cours...</h1>');\n",2445049,85,2442251,206,"chargement des stores\n                    me.loadStores(",1474096,50,"reset de la configuration stock\ufffff\ufffffe\n                    if (",2433442,33,")  {\n    ",2442231,39,2423796,54,"    \n                    //affichage du texte attente",2445102,32,"curview.down('[action=loadingText]').setHtml('<h1>Attente d\\'une session...</h1>');\n                    //aucune session disponible\n                    var task = Ext.create('Ext.util.DelayedTask",2394911,36,"        me.g",2423799,33,"    }, this);\n                    //The function will start after 0 milliseconds - so we want to start instantly at first\n                    task.delay(5000",306208,34,",\n",2434047,64,2434119,40,2442701,216,"_loading: false,\n    loadStores",1178816,32,"_loading",1083758,52,"this._loading = true;",1108704,34,2440160,1616,2442910,198,"if (",2436782,33,2436816,50,979456,35,2443113,579,"0",2443693,137,"eleve.utils.Config.setCurrentQuestion(record.get('Ordre')",2443872,6731,"action: 'loadingText",2450584,2345,"action: 'map'",18384,39,2453174,419," - 50",2453593,53,"this.down('[action=map]').destroy(",2453635,73,"containerMap]').add({\n",1210462,33,"               width: position.map.width,\n                height: position.map.height,\n                src: position.map.url,\n",2453106,42,"}",2453837,58,"var allX = Math.floor((position.map.width / 2) - (((position.map.width) - (screenw / scale)) / 2));\n        var allY = Math.floor(position.map.height / 2);",2454031,34,"-Math.floor(position.map.width / 2), -Math.floor(position.map.height / 2)).scale(scale).to(allX, allY).duration(1).end();\n        map",710335,40,"console.log('painted map', scale);\n",2454472,35,"allX = -(position.map.width / 2) + (screenw * scale) / 2;\n            allY = -(position.map.height / 2) + (screenh * scale) / 2;\n",2454214,51,"var posx = allX - ((position.posx - 0.5) * (position.map.width - screenw * scale));\n            var posy = allY - ((position.posy - 0.5) * (position.map.height - screenh * scale));\n            console.log(position.posx, position.posy, allX, allY, posx, posy, 'posy', Math.abs(position.posy - 0.5), 'd\ufffff\ufffffbattement', (position.map.height - screenh * scale));\n",2454499,34,"scale(scale).to(posx, posy",2454577,32,2379167,56,2454635,603,"action: 'panneauConfirm',\n                xtype: 'actionsheet',\n                text: 'Etes-vous s\ufffff\ufffffr ?',\n",1961640,46,1223792,55,"text: 'Oui',\n                        ui: 'confirm",2455680,36,"confirm",2456032,87,"xtype=question]')",2457962,38,2456149,76,"    this.up('[action=panneauConfirm]').hide(",225072,50,994889,48,"ui: 'decline',\n        ",2469082,45,2456051,68,"xtype=question]')",2457962,38,2456149,76,"    this.up('[action=panneauConfirm]').hide(",225072,67,"]",1191344,46,2455238,787,"Confirmer',\n                        ui: 'decline'",18384,39,"]",2428806,36,2456302,14056,"PhpstormProject",2470362,32]